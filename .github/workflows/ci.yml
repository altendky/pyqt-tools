name: CI

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

env:
  PIP_NO_PYTHON_VERSION_WARNING: 1

jobs:
  build:
    name: Build ${{ matrix.os.name }} ${{ matrix.python.name }}-${{ matrix.bitness.name }} ${{ matrix.qt.pyqt_version }}
    runs-on: ${{ matrix.os.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: Linux
            runs-on: ubuntu-latest
            python_platform: linux
#          - name: Windows
#            runs-on: windows-latest
#            python_platform: win32
#            vs_path: C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat
#          - name: macOS
#            runs-on: macos-latest
#            python_platform: darwin
        python:
          - name: 3.8
            tox: py38
            action: 3.8
            docker: 3.8
        qt:
          - pyqt_version: 5.14.0
            qt_version: 5.14.0
          - pyqt_version: 5.14.1
            qt_version: 5.14.1
          - pyqt_version: 5.14.2
            qt_version: 5.14.2
          - pyqt_version: 5.15.0
            qt_version: 5.15.0
          - pyqt_version: 5.15.1
            qt_version: 5.15.1
          - pyqt_version: 5.15.2
            qt_version: 5.15.2
          - pyqt_version: 5.15.3
            qt_version: 5.15.2
          - pyqt_version: 5.15.4
            qt_version: 5.15.2
        bitness:
          - name: x64
            action: x64
            ilammy: x64
        exclude:
          - python:
              name: 3.9
            qt:
              pyqt_version: 5.14.0
          - python:
              name: 3.9
            qt:
              pyqt_version: 5.14.1
          - python:
              name: 3.9
            qt:
              pyqt_version: 5.14.2
          - python:
              name: 3.9
            qt:
              pyqt_version: 5.15.0
          - python:
              name: 3.5
            qt:
              pyqt_version: 5.15.3
          - python:
              name: 3.5
            qt:
              pyqt_version: 5.15.4
    env:
      QT_VERSION: ${{ matrix.qt.qt_version }}
      PYQT_VERSION: ${{ matrix.qt.pyqt_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python.name }}-${{ matrix.bitness.name }}
        if: matrix.os.python_platform != 'linux'
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python.action }}
          architecture: ${{ matrix.bitness.action }}
      - name: pip/setuptools/tox
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install tox pep517
      - name: Report info
        shell: bash
        run: |
          git show --quiet HEAD
          python --version --version
          pip --version
          pip list
          pip freeze --all
          python -c "import sysconfig; print('Py_ENABLE_SHARED -> {}'.format(sysconfig.get_config_var('Py_ENABLE_SHARED')))"
      - name: Install Linux build dependencies
        if: matrix.os.python_platform == 'linux'
        run: |
          apt-get update --yes
          apt-get install --yes libgl1-mesa-dev libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0
      - uses: altendky/QTBUG-88688-libxcb-util@v3
      - name: Build wheel
        shell: bash
        run: |
          python -m pep517.build --binary --out-dir dist/ .
      - name: Archive individual wheel
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.qt.pyqt_version }}
          path: dist/
      - name: Archive all wheels
        uses: actions/upload-artifact@v1
        with:
          name: all_wheels
          path: dist/
  test:
    name: Test ${{ matrix.os.name }} ${{ matrix.python.name }}-${{ matrix.bitness.name }} ${{ matrix.qt.pyqt_version }}
    runs-on: ${{ matrix.os.runs-on }}
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: Linux
            runs-on: ubuntu-latest
            python_platform: linux
            matrix: linux
          - name: Windows
            runs-on: windows-latest
            python_platform: win32
            vs_path: C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat
            matrix: windows
#          - name: macOS
#            runs-on: macos-latest
#            python_platform: darwin
        python:
          - name: 3.5
            tox: py35
            action: 3.5
            docker: 3.5
            matrix: cpython3.5
          - name: 3.6
            tox: py36
            action: 3.6
            docker: 3.6
            matrix: cpython3.6
          - name: 3.7
            tox: py37
            action: 3.7
            docker: 3.7
            matrix: cpython3.7
          - name: 3.8
            tox: py38
            action: 3.8
            docker: 3.8
            matrix: cpython3.8
          - name: 3.9
            tox: py39
            action: 3.9
            docker: 3.9
            matrix: cpython3.9
          - name: Miniconda
            tox: py38
            action: miniconda3
            docker: miniconda3
            matrix: miniconda3
        qt:
          - pyqt_version: 5.14.0
            qt_version: 5.14.0
          - pyqt_version: 5.14.1
            qt_version: 5.14.1
          - pyqt_version: 5.14.2
            qt_version: 5.14.2
          - pyqt_version: 5.15.0
            qt_version: 5.15.0
          - pyqt_version: 5.15.1
            qt_version: 5.15.1
          - pyqt_version: 5.15.2
            qt_version: 5.15.2
          - pyqt_version: 5.15.3
            qt_version: 5.15.2
          - pyqt_version: 5.15.4
            qt_version: 5.15.2
        bitness:
          - name: x32
            action: x86
            ilammy: x86
          - name: x64
            action: x64
            ilammy: x64
        exclude:
          - bitness:
              name: x32
            os:
              matrix: linux
#           - bitness:
#               name: x32
#             os:
#               name: macOS
          - python:
              name: 3.9
            qt:
              pyqt_version: 5.14.0
          - python:
              name: 3.9
            qt:
              pyqt_version: 5.14.1
          - python:
              name: 3.9
            qt:
              pyqt_version: 5.14.2
          - python:
              name: 3.9
            qt:
              pyqt_version: 5.15.0
          - python:
              name: 3.5
            qt:
              pyqt_version: 5.15.3
          - python:
              name: 3.5
            qt:
              pyqt_version: 5.15.4
          - python:
              matrix: miniconda3
            os:
              matrix: windows
#          - python:
#              matrix: miniconda3
#            os:
#              name: macOS
    env:
      QT_VERSION: ${{ matrix.qt.qt_version }}
      PYQT_VERSION: ${{ matrix.qt.pyqt_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Download
        uses: actions/download-artifact@v1
        with:
          name: ${{ matrix.qt.pyqt_version }}
          path: dist/
      - name: Set up Python ${{ matrix.python.name }}-${{ matrix.bitness.name }}
        if: matrix.os.matrix != 'linux'
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python.action }}
          architecture: ${{ matrix.bitness.action }}
      - name: pip/setuptools/tox
        run: |
          python -m pip install --upgrade pip setuptools
          pip install tox
      - name: Report info
        shell: bash
        run: |
          git show --quiet HEAD
          python --version --version
          pip --version
          pip list
          pip freeze --all
          python -c "import sysconfig; print('Py_ENABLE_SHARED -> {}'.format(sysconfig.get_config_var('Py_ENABLE_SHARED')))"
      - name: Set WHEEL_PATH
        shell: python
        run: |
          import os
          import pathlib
          
          fspath = getattr(os, 'fspath', str)

          dist = pathlib.Path.cwd() / 'dist'
          [wheel] = dist.glob('*.whl')

          with open(os.environ['GITHUB_ENV'], 'a') as github_env:
              github_env.write('WHEEL_PATH={}\n'.format(fspath(wheel)))
              github_env.write('WHEEL_STEM={}\n'.format(wheel.stem))
      - name: Install Linux test dependencies
        if: matrix.os.matrix == 'linux'
        run: |
          apt-get update --yes
          apt-get install --yes libgl1-mesa-dev libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0 xvfb x11-utils
      - uses: altendky/QTBUG-88688-libxcb-util@v3
      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
        if: matrix.os.python_platform == 'win32'
        with:
          arch: ${{ matrix.bitness.ilammy }}
      - name: Test
        run: |
          tox -e ${{ matrix.python.tox }} --installpkg ${{ env['WHEEL_PATH'] }}
  maybe_publish:
    name: Maybe Publish
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Download all wheels
        uses: actions/download-artifact@v1
        with:
          name: all_wheels
          path: dist/
      - name: Install Python packages
        run: |
          pip install --upgrade twine
      - name: Maybe publish
        run: |
          python twineontag.py
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
  all:
    name: All
    runs-on: ubuntu-latest
    needs:
      - build
      - test
      - maybe_publish
    steps:
      - name: This
        shell: python
        run: |
          import this
